import { BonusToolItem } from '../types';

export const BONUS_TOOLS_DATA: BonusToolItem[] = [
  {
    id: 'amass',
    name: 'Amass',
    icon: 'fas fa-atom',
    description: 'In-depth attack surface mapping and asset discovery tool. Excellent for comprehensive subdomain enumeration using active and passive techniques.',
    usageExample: {
      command: 'amass enum -d example.com -o amass_results.txt',
      explanation: 'Performs enumeration for example.com and saves results.'
    },
    url: 'https://github.com/owasp-amass/amass'
  },
  {
    id: 'ffuf',
    name: 'ffuf (Fuzz Faster U Fool)',
    icon: 'fas fa-bolt',
    description: 'A fast web fuzzer written in Go, great for directory/file brute-forcing, parameter fuzzing, and virtual host discovery.',
    usageExample: {
      command: 'ffuf -w /path/to/wordlist.txt -u https://example.com/FUZZ -mc 200,301,403',
      explanation: 'Fuzzes paths on example.com, showing results with specified status codes.'
    },
    url: 'https://github.com/ffuf/ffuf'
  },
  {
    id: 'trufflehog',
    name: 'TruffleHog',
    icon: 'fas fa-key',
    description: 'Scans repositories (Git, S3, GCS, Filesystem) for secrets, digging deep into commit history and branches.',
    usageExample: {
      command: 'trufflehog git https://github.com/trufflesecurity/test_keys.git',
      explanation: 'Scans a public GitHub repository for leaked secrets.'
    },
    url: 'https://github.com/trufflesecurity/trufflehog'
  },
  {
    id: 'crlfuzz',
    name: 'CRLFuzz',
    icon: 'fas fa-wind',
    description: 'A fast tool to scan for CRLF (Carriage Return Line Feed) injection vulnerabilities on a list of URLs.',
    usageExample: {
      command: 'cat urls.txt | crlfuzz -s -o crlf_results.txt',
      explanation: 'Scans URLs from urls.txt for CRLF injection and saves silent output.'
    },
    url: 'https://github.com/dwisiswant0/crlfuzz'
  }
];
